* cider

This package is the best interactive environment for clojure development in the world.

#+begin_src elisp :tangle yes
  (use-package cider
  :ensure t
  :hook ((cider-repl-mode . paredit-mode)
         (clojure-mode . eglot-ensure)) ; Added from your clojure-mode hook
  :config

  (setq cider-jack-in-default 'clojure-cli)
  (setq nrepl-use-ssh-fallback-for-remote-hosts t)
  (setq cidr-repl-clear-help-banner t)
  (setq nrepl-hide-special-buffers t)
  (setq cider-font-lock-dynamically nil)
  (setq cider-popup-stacktraces nil)
  (setq cider-repl-popup-stacktraces t)
  (setq cider-repl-use-pretty-printing t)
  (setq cider-repl-pop-to-buffer-on-connect t)
  (setq cider-repl-display-help-banner nil)
  )
#+end_src
* clojure-ts-mode settings

#+begin_src elisp :tangle yes
  (use-package clojure-ts-mode
    :ensure t
    ;; These hooks activate for any Clojure file you open
    :hook ((clojure-ts-mode . eglot-ensure)
           (clojure-ts-mode . paredit-mode)
           (clojure-ts-mode . flycheck-mode))
    :config
    ;; This ensures .clj files always open in tree-sitter mode
    (add-to-list 'major-mode-remap-alist '(clojure-mode . clojure-ts-mode)))
#+end_src

* face customisation

#+begin_src elisp :tangle yes
  (add-hook 'clojure-ts-mode-hook
            (lambda ()
              (set-face-attribute 'clojure-ts-keyword-face nil :slant 'italic)))
#+end_src

* linting

#+begin_src elisp :tangle yes
  (use-package flycheck-clj-kondo
  :ensure t)
#+end_src
* utilities
#+begin_src elisp :tangle yes
  (use-package parseedn :ensure t)
  (use-package clojure-snippets :ensure t)
#+end_src
* provide
#+begin_src elisp :tangle yes
  (provide 'clojure-config)
#+end_src

